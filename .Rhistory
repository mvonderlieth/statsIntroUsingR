data = read.csv("./data/das.csv")
head(data)
plot(data$y)
yields = read.csv("./data/fertyield.csv")
table(yields$treatment)
data = read.csv("./data/scatter.csv")
plot(data$y~data$x, pch-21,bg="red")
plot(data$y~data$x, pch=21,bg="red")
plot(data$upper~factor(data$month))
data = read.csv("./data/weather.data.csv")
plot(data$upper~factor(data$month))
data = read.csv("./data/coplot.csv")
data = read.csv("./data/coplot.csv")
coplot(data$y~data$x|data$z,pch=16,panel=panel.smooth)
View(data)
data = read.csv("./data/np.csv")
View(data)
data = read.csv("./data/np.csv")
attach(data)
windows(7,4)
par(mfrow=c(1,2))
plot(nitrogen,yield,main="N")
data = read.csv("./data/np.csv")
attach(data)
windows(7,4)
detach(data)
data = read.csv("./data/np.csv")
attach(data)
detach(data)
data = read.csv("./data/np.csv")
attach(data)
windows(7,4)
par(mfrow=c(1,2))
plot(nitrogen,yield,main="N")
plot(phosphorus,yield,main="P")
tapply(yield,list(nitrogen,phosphorus),mean)
npInteraction = tapply(yield,list(nitrogen,phosphorus),mean)
barplot(npInteraction,beside=TRUE,xlab="phosphorus")
legend(locator(1),legend=c("no","yes"),title="nitrogen",fill=c("black","lightgrey"))
barplot(npInteraction,beside=TRUE,xlab="phosphorus")
legend(locator(1),legend=c("no","yes"),title="nitrogen",fill=c("black","lightgrey"))
barplot(npInteraction,beside=TRUE,xlab="phosphorus")
legend(locator(1),legend=c("no","yes"),title="nitrogen",fill=c("black","lightgrey"))
barplot(npInteraction,beside=TRUE,xlab="phosphorus")
legend(locator(1),legend=c("no","yes"),title="nitrogen",fill=c("black","lightgrey"))
barplot(npInteraction,beside=TRUE,xlab="phosphorus")
legend(legend=c("no","yes"),title="nitrogen",fill=c("black","lightgrey"))
barplot(npInteraction,beside=TRUE,xlab="phosphorus")
legend(locator(1),legend=c("no","yes"),title="nitrogen",fill=c("black","lightgrey"))
detach(data)
rm(data)
rm(npInteraction)
data = read.csv("./data/das.csv")
plot(data$y)
yields = read.csv("./data/fertyield.csv")
table(yields$treatment)
View(yields)
data = read.csv("./data/scatter.csv")
plot(data$y~data$x, pch=21,bg="red")
data = read.csv("./data/weather.data.csv")
plot(data$upper~factor(data$month))
View(data)
data = read.csv("./data/coplot.csv")
coplot(data$y~data$x|data$z,pch=16,panel=panel.smooth)
View(data)
data = read.csv("./data/np.csv")
attach(data)
View(data)
par(mfrow=c(1,2))
plot(nitrogen,yield,main="N")
plot(phosphorus,yield,main="P")
npInteraction = tapply(yield,list(nitrogen,phosphorus),mean)
barplot(npInteraction,beside=TRUE,xlab="phosphorus")
legend(locator(1),legend=c("no","yes"),title="nitrogen",fill=c("black","lightgrey"))
detach(data)
View(data)
ozone <- read.csv("/data/gardens.csv")
ozone <- read.csv("./data/gardens.csv")
attach(ozone)
ozone
mean(gardenA)
mean(gardenB)
mean(gardenC)
var(gardenA)
y = gardenA
var(y)
sum(y^2) - (sum(y)^2/n)
n = nrows(y)
n = nrow(y)
n
n = length(y)
n
var(y)
sum(y^2) - (sum(y)^2/n)
sum((y - mean(y)^2)/df)
sum((y - mean(y))^2/df)
y
mean(y)
y - mean(y)
sum((y - mean(y))^2)
sum((y - mean(y))^2)/df
sum((y - mean(y))^2)
df
df
n
n - 1
n
df = n - 1
df
var(y)
sum((y - mean(y))^2)
sum((y - mean(y))^2)/df
sum(y^2) - (sum(y)^2)/n
sum(y^2) - ((sum(y)^2)/n)
sum(y^2 - (sum(y)^2/n)
sum(y^2 - (sum(y)^2/n))
sum(y)^2/n
sum(y)
sum(y)^2
sum(y)^2/n
sum(y^2) - (sum(y)^2/n)
sum(y^2) - ((sum(y)^2)/n))
sum(y^2) - ((sum(y)^2)/n)
sum(y^2) - (sum(y)^2/n)
y
sum(y^2)
sum(y)
sum(y)^2
sum(y)^2/n
(sum(y^2) - (sum(y)^2/n))/df
sum((y - mean(y))^2)/df
(sum(y^2) - (sum(y)^2/n))/df
sum(y^2) - (sum(y)^2/n)
# and using that to get variance
(sum(y^2) - (sum(y)^2/n))/df
ymean = mean(y)
sum((y - ymean^2)/df
sum((y - ymean^2))/df
sum((y - ymean^2))/df
sum((y - mean(y))^2)/df
ymean = mean(y)
sum((y - ymean)^2)/df
# options("scipen" = 10)
mpg = 25
mpy = 15000
numCars = 2000000
tax = 0.05
totalMpy = mpy * numCars
format(totalMpy, digits=2, nsmall=2, big.mark=",")
totalMpg = totalMpy/mpg
format(totalMpg, digits=2, nsmall=2, big.mark=",")
options("scipen" = 10)
mpg = 25
mpy = 15000
numCars = 2000000
tax = 0.05
totalMpy = mpy * numCars
format(totalMpy, digits=2, nsmall=2, big.mark=",")
totalMpg = totalMpy/mpg
format(totalMpg, digits=2, nsmall=2, big.mark=",")
source('~/Playground/Programming/Projects/statsIntroUsingR/gastax.R', echo=TRUE)
options("scipen" = 10)
mpg = 25
mpy = 15000
numCars = 2000000
tax = 0.05
totalMpy = mpy * numCars
format(totalMpy, digits=2, nsmall=2, big.mark=",")
totalGallons = totalMpy/mpg
format(totalGallons, digits=2, nsmall=2, big.mark=",")
totalRevenue = totalGallons * tax
format(totalRevenue, digits=2, nsmall=2, big.mark=",")
source('~/Playground/Programming/Projects/statsIntroUsingR/gastax.R', echo=TRUE)
